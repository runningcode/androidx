/*
 * Copyright (C) 2023 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import androidx.build.KmpPlatformsKt
import org.jetbrains.kotlin.gradle.plugin.KotlinPlatformType

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("com.google.devtools.ksp")
}

// Disabled due to https://youtrack.jetbrains.com/issue/KT-65761
ext["kotlin.native.disableCompilerDaemon"] = 'true'

androidXMultiplatform {
    android()
    ios()
    jvm()
    linux()
    mac()
    sourceSets {
        commonTest {
            dependencies {
                implementation(libs.kotlinStdlib)
                implementation(project(":room:room-runtime"))
                implementation(project(":sqlite:sqlite-bundled"))
                implementation(project(":kruth:kruth"))
                implementation(libs.kotlinTest)
                implementation(libs.kotlinCoroutinesTest)
            }
        }
        androidInstrumentedTest {
            dependsOn(commonTest)
            dependencies {
                implementation(libs.kotlinTestJunit)
                implementation(libs.testRunner)
                implementation(libs.testCore)
            }
        }
        jvmTest {
            dependsOn(commonTest)
            dependencies {
                implementation(libs.kotlinTestJunit)
            }
        }
        nativeTest {
            dependsOn(commonTest)
        }
        targets.all { target ->
            if (target.platformType == KotlinPlatformType.native) {
                target.compilations["test"].defaultSourceSet {
                    dependsOn(nativeTest)
                }
            }
        }
    }
}

// TODO(b/325111583): Create a helper function to configure KSP with KMP targets
dependencies {
    def roomCompilerDependency = project(path: ":room:room-compiler", configuration: "shadowAndImplementation")
    add("kspAndroidAndroidTest", roomCompilerDependency)
    add("kspJvmTest", roomCompilerDependency)
    add("kspLinuxX64Test", roomCompilerDependency)
    if (KmpPlatformsKt.enableMac(project)) {
        add("kspIosSimulatorArm64Test", roomCompilerDependency)
        add("kspIosX64Test", roomCompilerDependency)
        add("kspMacosX64Test", roomCompilerDependency)
        add("kspMacosArm64Test", roomCompilerDependency)
    }
}

ksp {
    arg("room.generateKotlin", "true")
}

android {
    namespace "androidx.room.integration.multiplatformtestapp"
}
